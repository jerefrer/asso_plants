	/* # Library
	============================================= */

			.link-box {
				cursor:pointer;
				width:100%;
				height:100%;
			}

			@mixin clearfix() {
			  content: "";
			  display: table;
			  clear: both;
			  min-height: 0px;
    		  overflow: hidden;
    			display: block;			
			}

			.container:after,
			.row:after,
			.u-cf, .clearfix {
			  @include clearfix();
			}
			
			.screen-box {
			  height: 100%;
			  width: 100%;
			  position:relative;				
			}


		/* ## Graphical ehancements
		============================================= */

			
			@mixin opacity($opacity) {
				opacity: $opacity;
				$opacity-ie: $opacity * 100;
				filter: alpha(opacity=$opacity-ie); //IE8
				-ms-filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=$opacity-ie);
			}

			@mixin box-sizing ($sizing: border-box) {

				-ms-box-sizing: 			$sizing;
				-moz-box-sizing: 			$sizing;
				-webkit-box-sizing: 		$sizing;
				box-sizing: 				$sizing;
			}

			@mixin scale ($factor) {

				-webkit-transform:			scale($factor);
				-moz-transform: 	 		scale($factor);
				-ms-transform: 		 		scale($factor);
				-o-transform: 		 		scale($factor);
			}

			@mixin translateX ($number: -40px) {

				-webkit-transform: 			translateX($number);
				-moz-transform: 	 		translateX($number);
				-ms-transform: 		 		translateX($number);
				-o-transform: 		 		translateX($number);
			}


			@mixin translateY ($number: -40px) {

				-webkit-transform: 			translateY($number);
				-moz-transform: 	 		translateY($number);
				-ms-transform: 		 		translateY($number);
				-o-transform: 		 		translateY($number);
			}

			@mixin rotate ($deg) {

				-webkit-transform: 			rotate($deg);
				-moz-transform: 	 		rotate($deg);
				-ms-transform: 		 		rotate($deg);
				-o-transform: 		 		rotate($deg);
			}

			@mixin border-radius ($radius: 5px) {

				-webkit-border-radius: 		$radius;
				-moz-border-radius: 		$radius;
				-o-border-radius: 			$radius;
				border-radius: 				$radius;
			}

			@mixin brightness ($value: 40%) {

				filter: 					brightness($value);
				-webkit-filter: 			brightness($value);
				-moz-filter: 				brightness($value);
				-o-filter: 					brightness($value);
				-ms-filter: 				brightness($value);
			}

			@mixin circle {

				-webkit-border-radius:		100%;
				-moz-border-radius: 		100%;
				-o-border-radius: 			100%;
				border-radius:				100%;
			}

			@mixin box-shadow ($x:3px, $y:3px, $blur:5px, $alpha: 0.5) {

				-webkit-box-shadow: 		$x $y $blur rgba(0, 0, 0, $alpha);
				-moz-box-shadow: 			$x $y $blur rgba(0, 0, 0, $alpha);
				-o-box-shadow: 				$x $y $blur rgba(0, 0, 0, $alpha);
				box-shadow: 				$x $y $blur rgba(0, 0, 0, $alpha);
			}


			@mixin text-shadow ($content:"", $content2:"") {

				-webkit-text-shadow: 		$content, $content2;
				-moz-text-shadow: 			$content, $content2;
				-o-text-shadow: 			$content, $content2;
				text-shadow: 				$content, $content2;
			}


			@mixin gradient ($origin: left, $start: #ffffff, $stop: #000000) {

				background-color:	 		$start;
				background-image:	 		-webkit-linear-gradient($origin, $start, $stop);
				background-image:	 		-moz-linear-gradient($origin, $start, $stop);
				background-image:	 		-o-linear-gradient($origin, $start, $stop);
				background-image:	 		-ms-linear-gradient($origin, $start, $stop);
				background-image:	 		linear-gradient($origin, $start, $stop);
			}

			@mixin cover {
				-webkit-background-size: 	cover;
				-moz-background-size: 		cover;
				-o-background-size: 		cover;
				background-size: 			cover;
			}

			@mixin unselectable () {

				-moz-user-select:           none;
				-khtml-user-select:         none;
				-webkit-user-select:        none;
				-o-user-select:             none;
			}

			@mixin selectable () {
				-webkit-user-select: 		text;
				-khtml-user-select: 		text;
				-moz-user-select: 			text;
				-o-user-select: 			text;
				user-select: 				text;
			}

			/* NOTE: For more informations about text-rendering, check this out
					 https://developer.mozilla.org/fr/docs/Web/CSS/text-rendering */

			@mixin antialiased () {
				-webkit-font-smoothing:     antialiased;
				-moz-osx-font-smoothing:    grayscale;
				text-rendering:             optimizelegibility;
			}


			@mixin selection-color ( $text-color: white, $bg-color: black ) {

				::selection                 { background: $bg-color; color: $text-color; }
				::-moz-selection            { background: $bg-color; color: $text-color; }
				::-webkit-selection         { background: $bg-color; color: $text-color; }
			}

			@mixin placeholder-color ( $color: black ) {

				::-webkit-input-placeholder { color: $color; }
				::-moz-placeholder          { color: $color; opacity:1; }
				::-moz-placeholder          { color: $color; opacity:1; }
				::-ms-input-placeholder     { color: $color; }
			}


			.border-box					{ @include box-sizing; }
			.circle 					{ @include circle; }
			.box-shadow 				{ @include box-shadow; }
			.cover						{ @include cover; }
			.unselectable               { @include unselectable; }
			.antialiased                { @include antialiased; }


		/* ## Require fonts
		================================================== */

			/* NOTE: To use include-font directive,
					 be sure to have theses four formats in the right directory

					 .ttf - Works in most browsers except IE and iPhone.
					 .eot - IE only. 
					 .woff - Compressed, emerging standard. 
					 .svg - iPhone/iPad

					 .include-font("path/to/font", "font-name", "font-weight", "font-style");
			*/

			@mixin include-font($path:"fonts/", $name: arial, $weight: normal, $style: normal){
				@font-face{
					font-family: $name;
					src:url('${path}${name}.eot');
					src:url('${path}${name}.eot?#iefix') format('embedded-opentype'),
						url('${path}${name}.woff') format('woff'),
						url('${path}${name}.ttf') format('truetype'),
						url('${path}${name}.svg#icon') format('svg');
					font-weight: $weight;
					font-style: $style;
				}
			}


		/* ## Font size system
		================================================== */

			@mixin font($font-size: 16, $multiplier: 1) {

				font-size: 				$font-size;
				line-height: 			($font-size) * 0.7;
				margin-bottom: 			($font-size/ 2) * $multiplier;
			}


	/* ## Positioning
	================================================== */

		/* ### Fluid centering for fullpage
		============================================= */

			.center {
			  display: table;
			  height: 100%;
			  width: 100%;
			  .center-box {
			    display: table-cell;
			    vertical-align: middle;
			  }
			}

	/* # Library
	============================================= */

			.link-box {
				cursor:pointer;
				width:100%;
				height:100%;
			}

			@mixin clearfix() {
			  content: "";
			  display: table;
			  clear: both;
			  min-height: 0px;
    		  overflow: hidden;
    			display: block;			
			}

			.container:after,
			.row:after,
			.u-cf, .clearfix {
			  @include clearfix();
			}

		/* ## Graphical ehancements
		============================================= */

			
			@mixin opacity($opacity) {
				opacity: $opacity;
				$opacity-ie: $opacity * 100;
				filter: alpha(opacity=$opacity-ie); //IE8
				-ms-filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=$opacity-ie);
			}

			@mixin box-sizing ($sizing: border-box) {

				-ms-box-sizing: 			$sizing;
				-moz-box-sizing: 			$sizing;
				-webkit-box-sizing: 		$sizing;
				box-sizing: 				$sizing;
			}

			@mixin scale ($factor) {

				-webkit-transform:			scale($factor);
				-moz-transform: 	 		scale($factor);
				-ms-transform: 		 		scale($factor);
				-o-transform: 		 		scale($factor);
			}

			@mixin translateX ($number: -40px) {

				-webkit-transform: 			translateX($number);
				-moz-transform: 	 		translateX($number);
				-ms-transform: 		 		translateX($number);
				-o-transform: 		 		translateX($number);
			}


			@mixin translateY ($number: -40px) {

				-webkit-transform: 			translateY($number);
				-moz-transform: 	 		translateY($number);
				-ms-transform: 		 		translateY($number);
				-o-transform: 		 		translateY($number);
			}

			@mixin rotate ($deg) {

				-webkit-transform: 			rotate($deg);
				-moz-transform: 	 		rotate($deg);
				-ms-transform: 		 		rotate($deg);
				-o-transform: 		 		rotate($deg);
			}

			@mixin border-radius ($radius: 5px) {

				-webkit-border-radius: 		$radius;
				-moz-border-radius: 		$radius;
				-o-border-radius: 			$radius;
				border-radius: 				$radius;
			}

			@mixin brightness ($value: 40%) {

				filter: 					brightness($value);
				-webkit-filter: 			brightness($value);
				-moz-filter: 				brightness($value);
				-o-filter: 					brightness($value);
				-ms-filter: 				brightness($value);
			}

			@mixin circle {

				-webkit-border-radius:		100%;
				-moz-border-radius: 		100%;
				-o-border-radius: 			100%;
				border-radius:				100%;
			}

			@mixin box-shadow ($x:3px, $y:3px, $blur:5px, $alpha: 0.5) {

				-webkit-box-shadow: 		$x $y $blur rgba(0, 0, 0, $alpha);
				-moz-box-shadow: 			$x $y $blur rgba(0, 0, 0, $alpha);
				-o-box-shadow: 				$x $y $blur rgba(0, 0, 0, $alpha);
				box-shadow: 				$x $y $blur rgba(0, 0, 0, $alpha);
			}


			@mixin text-shadow ($x:1px, $y:1px, $blur:0px, $color: white) {

				-webkit-text-shadow: 		$x $y $blur $color;
				-moz-text-shadow: 			$x $y $blur $color;
				-o-text-shadow: 			$x $y $blur $color;
				text-shadow: 				$x $y $blur $color;
			}


			@mixin gradient ($origin: left, $start: #ffffff, $stop: #000000) {

				background-color:	 		$start;
				background-image:	 		-webkit-linear-gradient($origin, $start, $stop);
				background-image:	 		-moz-linear-gradient($origin, $start, $stop);
				background-image:	 		-o-linear-gradient($origin, $start, $stop);
				background-image:	 		-ms-linear-gradient($origin, $start, $stop);
				background-image:	 		linear-gradient($origin, $start, $stop);
			}

			@mixin cover {
				-webkit-background-size: 	cover;
				-moz-background-size: 		cover;
				-o-background-size: 		cover;
				background-size: 			cover;
			}

			@mixin unselectable () {

				-moz-user-select:           none;
				-khtml-user-select:         none;
				-webkit-user-select:        none;
				-o-user-select:             none;
			}

			@mixin selectable () {
				-webkit-user-select: 		text;
				-khtml-user-select: 		text;
				-moz-user-select: 			text;
				-o-user-select: 			text;
				user-select: 				text;
			}

			/* NOTE: For more informations about text-rendering, check this out
					 https://developer.mozilla.org/fr/docs/Web/CSS/text-rendering */

			@mixin antialiased () {
				-webkit-font-smoothing:     antialiased;
				-moz-osx-font-smoothing:    grayscale;
				text-rendering:             optimizelegibility;
			}


			@mixin selection-color ( $text-color: white, $bg-color: black ) {

				::selection                 { background: $bg-color; color: $text-color; }
				::-moz-selection            { background: $bg-color; color: $text-color; }
				::-webkit-selection         { background: $bg-color; color: $text-color; }
			}

			@mixin placeholder-color ( $color: black ) {

				::-webkit-input-placeholder { color: $color; }
				::-moz-placeholder          { color: $color; opacity:1; }
				::-moz-placeholder          { color: $color; opacity:1; }
				::-ms-input-placeholder     { color: $color; }
			}


			.border-box					{ @include box-sizing; }
			.circle 					{ @include circle; }
			.box-shadow 				{ @include box-shadow; }
			.cover						{ @include cover; }
			.unselectable               { @include unselectable; }
			.antialiased                { @include antialiased; }


		/* ## Require fonts
		================================================== */

			/* NOTE: To use include-font directive,
					 be sure to have theses four formats in the right directory

					 .ttf - Works in most browsers except IE and iPhone.
					 .eot - IE only. 
					 .woff - Compressed, emerging standard. 
					 .svg - iPhone/iPad

					 .include-font("path/to/font", "font-name", "font-weight", "font-style");
			*/

			@mixin include-font($path:"fonts/", $name: arial, $weight: normal, $style: normal){
				@font-face{
					font-family: $name;
					src:url('${path}${name}.eot');
					src:url('${path}${name}.eot?#iefix') format('embedded-opentype'),
						url('${path}${name}.woff') format('woff'),
						url('${path}${name}.ttf') format('truetype'),
						url('${path}${name}.svg#icon') format('svg');
					font-weight: $weight;
					font-style: $style;
				}
			}


		/* ## Font size system
		================================================== */

			@mixin font($font-size: 16, $multiplier: 1) {

				font-size: 				$font-size;
				line-height: 			($font-size) * 0.7;
				margin-bottom: 			($font-size/ 2) * $multiplier;
			}

		/* ## Animations mixins
		================================================== */

			@mixin transition ($attribute: all, $duration: 200ms, $easing: ease-in-out ) {

				-webkit-transition: 		$attribute $duration $easing;
				-moz-transition:			$attribute $duration $easing;
				-o-transition: 				$attribute $duration $easing;
				transition: 				$attribute $duration $easing;
			}

			@mixin animation ($animation, $delay: 1s, $duration: 1s) {
				-webkit-animation: $animation $delay $duration;
				-moz-animation:    $animation $delay $duration;
				-o-animation:      $animation $delay $duration;
				animation:         $animation $delay $duration;
			}


			@mixin delay ( $duration: 2s ) {

				-webkit-transition-delay: 	$duration;
				-moz-transition-delay: 		$duration;
				-o-transition-delay: 		$duration;
				transition-delay:			$duration;
			}

			@mixin fade ($opacity: 0.6) {

				opacity: 					$opacity;
				&:hover 					{ opacity:1; }

				@include transition(opacity, 200ms, ease-in-out);
			}

			.fade					{ @include fade(0.6); }

			.hidden 				{ display: none; visibility: hidden; opacity:0; }
			.visible 				{ display: block; visibility: visible; opacity:1; }
			.invisible 				{ visibility: hidden; }

			.delay05s 				{ @include delay(0.5s);   }
			.delay1s  				{ @include delay(1.0s);   }
			.delay15s 				{ @include delay(1.5s);   }
			.delay2s  				{ @include delay(2.0s);   }
			.delay25s 				{ @include delay(2.5s);   }
			.delay3s  				{ @include delay(3.0s);   }


		/* ## Keyframes mixin
		================================================== */

			@mixin keyframes($animationName) {
			    @-webkit-keyframes #{$animationName} {
			        @content;
			    }
			    @-moz-keyframes #{$animationName} {
			        @content;
			    }
			    @-o-keyframes #{$animationName} {
			        @content;
			    }
			    @keyframes #{$animationName} {
			        @content;
			    }
			}